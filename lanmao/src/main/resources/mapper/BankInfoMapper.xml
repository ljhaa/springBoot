<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yipuhui.fastgo.dao.BankInfoMapper" >
  <resultMap id="BaseResultMap" type="com.yipuhui.fastgo.enty.BankInfo" >
    <id column="bank_id" property="bankId" jdbcType="INTEGER" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="bank_num" property="bankNum" jdbcType="VARCHAR" />
    <result column="account_type" property="accountType" jdbcType="CHAR" />
    <result column="account_num" property="accountNum" jdbcType="VARCHAR" />
    <result column="bank_info" property="bankInfo" jdbcType="VARCHAR" />
    <result column="third_status" property="thirdStatus" jdbcType="VARCHAR" />
    <result column="verify_date" property="verifyDate" jdbcType="TIMESTAMP" />
    <result column="used_status" property="usedStatus" jdbcType="CHAR" />
    <result column="fail_reason" property="failReason" jdbcType="VARCHAR" />
    <result column="lender_id" property="lenderId" jdbcType="INTEGER" />
    <result column="channel_id" property="channelId" jdbcType="INTEGER" />
      <result column="system_code" property="systemCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    bank_id, province, city, real_name, bank_num, account_type, account_num, bank_info, 
    third_status, verify_date, used_status, fail_reason, lender_id, channel_id,system_code
  </sql>
  <sql id="Base_Column_List_ji" >
    ji.bank_id, ji.province, ji.city, ji.real_name, ji.bank_num, ji.account_type, ji.account_num, ji.bank_info, 
    ji.third_status, ji.verify_date, ji.used_status, ji.fail_reason, ji.lender_id, ji.channel_id,ji.system_code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from jy_bank_info
    where bank_id = #{bankId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from jy_bank_info
    where bank_id = #{bankId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yipuhui.fastgo.enty.BankInfo" >
    insert into core.jy_bank_info (bank_id, province, city,
      real_name, bank_num, account_type, 
      account_num, bank_info, third_status, 
      verify_date, used_status, fail_reason, 
      lender_id, channel_id,system_code)
    values (#{bankId,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{bankNum,jdbcType=VARCHAR}, #{accountType,jdbcType=CHAR}, 
      #{accountNum,jdbcType=VARCHAR}, #{bankInfo,jdbcType=VARCHAR}, #{thirdStatus,jdbcType=VARCHAR}, 
      #{verifyDate,jdbcType=TIMESTAMP}, #{usedStatus,jdbcType=CHAR}, #{failReason,jdbcType=VARCHAR}, 
      #{lenderId,jdbcType=INTEGER},#{channelId,jdbcType=INTEGER},#{systemCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yipuhui.fastgo.enty.BankInfo" >
    insert into jy_bank_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="bankNum != null" >
        bank_num,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="accountNum != null" >
        account_num,
      </if>
      <if test="bankInfo != null" >
        bank_info,
      </if>
      <if test="thirdStatus != null" >
        third_status,
      </if>
      <if test="verifyDate != null" >
        verify_date,
      </if>
      <if test="usedStatus != null" >
        used_status,
      </if>
      <if test="failReason != null" >
        fail_reason,
      </if>
      <if test="lenderId != null" >
        lender_id,
      </if>
      <if test="channelId != null" >
        channel_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bankId != null" >
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="bankNum != null" >
        #{bankNum,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=CHAR},
      </if>
      <if test="accountNum != null" >
        #{accountNum,jdbcType=VARCHAR},
      </if>
      <if test="bankInfo != null" >
        #{bankInfo,jdbcType=VARCHAR},
      </if>
      <if test="thirdStatus != null" >
        #{thirdStatus,jdbcType=VARCHAR},
      </if>
      <if test="verifyDate != null" >
        #{verifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="usedStatus != null" >
        #{usedStatus,jdbcType=CHAR},
      </if>
      <if test="failReason != null" >
        #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="lenderId != null" >
        #{lenderId,jdbcType=INTEGER},
      </if>
      <if test="channelId != null" >
        #{channelId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yipuhui.fastgo.enty.BankInfo" >
    update core.jy_bank_info
    <set >
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="bankNum != null" >
        bank_num = #{bankNum,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=CHAR},
      </if>
      <if test="accountNum != null" >
        account_num = #{accountNum,jdbcType=VARCHAR},
      </if>
      <if test="bankInfo != null" >
        bank_info = #{bankInfo,jdbcType=VARCHAR},
      </if>
      <if test="thirdStatus != null" >
        third_status = #{thirdStatus,jdbcType=VARCHAR},
      </if>
      <if test="verifyDate != null" >
        verify_date = #{verifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="usedStatus != null" >
        used_status = #{usedStatus,jdbcType=CHAR},
      </if>
      <if test="failReason != null" >
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="lenderId != null" >
        lender_id = #{lenderId,jdbcType=INTEGER},
      </if>
      <if test="channelId != null" >
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
    </set>
    where bank_id = #{bankId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yipuhui.fastgo.enty.BankInfo" >
    update core.jy_bank_info
    set province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      bank_num = #{bankNum,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=CHAR},
      account_num = #{accountNum,jdbcType=VARCHAR},
      bank_info = #{bankInfo,jdbcType=VARCHAR},
      third_status = #{thirdStatus,jdbcType=VARCHAR},
      verify_date = #{verifyDate,jdbcType=TIMESTAMP},
      used_status = #{usedStatus,jdbcType=CHAR},
      fail_reason = #{failReason,jdbcType=VARCHAR},
      lender_id = #{lenderId,jdbcType=INTEGER},
      channel_id = #{channelId,jdbcType=INTEGER}
    where bank_id = #{bankId,jdbcType=INTEGER}
  </update>
  
  <!-- * 查询银行卡信息-出借人   * form lijie -->
  <select id="getBankInfoByLenderNum" resultType="hashmap" parameterType="string">
  	SELECT 
  	bi.bank_id bankId,
	  bi.real_name realName,
	  bi.bank_num bankNum,
	  CONCAT(
	    LEFT(bi.account_num, 4),
	    ' **** **** ',
	    RIGHT(bi.account_num, 4)
	  ) accountNumText,
  	  bi.account_num accountNum,
	  bi.bank_info bankInfo,
	  bi.province province,
	  bi.city city,
	  bi.third_status cardStatus,
	  sd.dict_name bankNumText,
	  sd.`status` bankStatus,
	  l.system_code systemCode ,
	  l.card_code cardNum
	FROM
	  core.jy_bank_info bi
	JOIN core.tz_lender l
	ON bi.lender_id = l.lender_id
	JOIN online.system_dict sd
	ON bi.bank_num = sd.dict_code
	WHERE bi.used_status = '1'
	AND sd.dict_type='THIRD_BANK_KJ'
	AND l.lender_num = #{lenderNum,jdbcType=VARCHAR}
  </select>

    <!-- * 查询银行卡信息-出借人   * form liujunhan -->
    <select id="getBankInfoByCjCardNum" resultType="hashmap" parameterType="string">
        SELECT
        bi.bank_id bankId,
        bi.real_name realName,
        bi.bank_num bankNum,
        CONCAT(
        LEFT(bi.account_num, 4),
        ' **** **** ',
        RIGHT(bi.account_num, 4)
        ) accountNumText,
        bi.account_num accountNum,
        bi.bank_info bankInfo,
        bi.province province,
        bi.city city,
        bi.third_status cardStatus,
        sd.dict_name bankNumText,
        l.system_code systemCode ,
        l.card_code cardNum
        FROM
        core.jy_bank_info bi
        JOIN core.tz_lender l
        ON bi.lender_id = l.lender_id
        JOIN core.system_dict sd
        ON bi.bank_num = sd.dict_code
        WHERE bi.used_status = '1'
        AND l.card_code = #{cardNum,jdbcType=VARCHAR}
    </select>
  <!-- * 查询银行卡信息-借款人   * form lijie -->
  <select id="getBankInfoByCardNum" resultType="hashmap" parameterType="string">
  	SELECT 
  		bi.bank_id bankId,
	  bi.real_name realName,
	  bi.bank_num bankNum,
	  CONCAT(
	    LEFT(bi.account_num, 4),
	    ' **** **** ',
	    RIGHT(bi.account_num, 4)
	  ) accountNumText,
	  bi.account_num accountNum,
	  bi.bank_info bankInfo,
	  bi.province province,
	  bi.city city,
	  bi.third_status cardStatus,
	  sd.dict_name bankNumText ,
    b.card_info cardNum

	FROM
	  core.jy_bank_info bi
	JOIN core.qd_borrower b
	ON b.id = bi.borrower_id 
	JOIN core.system_dict sd
	ON bi.bank_num = sd.dict_code 
	WHERE bi.used_status = '1' 
	AND b.card_info = #{cardNum,jdbcType=VARCHAR}
  </select>
  
  <!-- 通过lenderId获取银行卡信息 个人  -->
  <select id="getLenderInfoByLenderNum" resultType="hashmap" parameterType="string">
  	SELECT 
  	  bi.bank_id bankId,
	  bi.real_name realName,
	  tl.card_type cardType,
	  tl.card_code cardCode,
	  bi.account_num accountNum,
	  bi.bank_num bankNum,
	  sd.dict_name bankNumName,
	  bi.third_status cardStatus
	FROM
	  core.jy_bank_info bi 
	JOIN core.tz_lender tl ON bi.lender_id = tl.lender_id 
	JOIN core.system_dict sd ON bi.bank_num = sd.dict_code
	WHERE tl.lender_num = #{lenderNum} and bi.used_status ='1'
  </select>

    <!-- 通过lenderId获取银行卡信息 企业  -->
    <select id="getCompanyBankInfoByLenderNum" resultType="hashmap" parameterType="string">
       SELECT
        bi.bank_id bankId,
        bi.real_name realName,
        tl.card_type cardType,
        tl.card_num cardCode,
        bi.account_num accountNum,
        bi.bank_num bankNum,
        sd.dict_name bankNumName,
        bi.third_status cardStatus
        FROM
          core.jy_bank_info bi
        JOIN  core.qd_borrower qb ON bi.borrower_id = qb.id
		JOIN  `online`.t_lender_detail tl ON qb.card_info = tl.card_num
        JOIN  core.system_dict sd ON bi.bank_num = sd.dict_code
        WHERE tl.lender_num = #{lenderNum} and bi.used_status ='1'
    </select>


  <!-- 通过lenderId获取银行卡信息对象 企业  -->
  <select id="getCompanyBankByLenderNum" resultMap="BaseResultMap" parameterType="string">
    SELECT
    <include refid="Base_Column_List_ji" />
    FROM
    core.jy_bank_info ji
    JOIN  core.qd_borrower qb ON ji.borrower_id = qb.id
    JOIN  `online`.t_lender_detail tl ON qb.card_info = tl.card_num
    JOIN  core.system_dict sd ON ji.bank_num = sd.dict_code
    WHERE tl.lender_num = #{lenderNum} and ji.used_status ='1'
  </select>
  <select id="verifyAccountNum" parameterType="string" resultType="int">
  	SELECT 
	  COUNT(1) 
	FROM
	  core.jy_bank_info bi 
	WHERE bi.account_num = #{accountNum} AND bi.third_status = '3'
  </select>
  
   <select id="selectByAccountNum" resultMap="BaseResultMap" parameterType="string" >
    select 
    <include refid="Base_Column_List" />
    from core.jy_bank_info
    where account_num = #{accountNum} and used_status ='1' limit 1
  </select>
  
  <select id="selectByCardInfo" resultMap="BaseResultMap" parameterType="string" >
    select 
    <include refid="Base_Column_List" />
    FROM
  core.jy_bank_info a
WHERE a.`borrower_id` IN(SELECT id FROM  core.qd_borrower b WHERE b.`card_info`=#{cardInfo})  LIMIT 1
   
  </select>
  <update id="updateBankInfo">
  
  </update>
  
  <!-- 根据id修改银行卡状态 -->
  <update id="updateChangeCard">
  
  UPDATE core.jy_bank_info AS ji SET  ji.third_status = #{thirdStatus} 
  <if test="usedStatus != null">
  ,ji.used_status=#{usedStatus} 
  </if>
  WHERE ji.bank_id = #{bankId}
  
  </update>
  <!-- 根据lenderNum 查询银行卡信息 -->
  <select id="selectDataByLenderNum" resultMap="BaseResultMap" >
 SELECT 
<include refid="Base_Column_List_ji"/>
 FROM core.jy_bank_info ji LEFT JOIN core.tz_lender tl ON ji.lender_id = tl.lender_id  WHERE tl.lender_num =#{lenderNum} and ji.used_status ='1'
  </select>


    <!-- 获取不可用装态的银行卡信息-->
    <select id="fundByAccountNum" resultMap="BaseResultMap" parameterType="string" >
        select
        <include refid="Base_Column_List" />
        from core.jy_bank_info
        where account_num = #{accountNum}
    </select>

</mapper>