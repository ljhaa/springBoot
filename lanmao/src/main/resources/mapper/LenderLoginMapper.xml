<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yipuhui.fastgo.dao.LenderLoginMapper" >
    <resultMap id="BaseResultMap" type="com.yipuhui.fastgo.enty.LenderLogin" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="login_pwd" property="loginPwd" jdbcType="VARCHAR" />
        <result column="trade_pwd" property="tradePwd" jdbcType="VARCHAR" />
        <result column="activate_code" property="activateCode" jdbcType="VARCHAR" />
        <result column="activate_overtime" property="activateOvertime" jdbcType="INTEGER" />
        <result column="activate_state" property="activateState" jdbcType="CHAR" />
        <result column="referral_code" property="referralCode" jdbcType="VARCHAR" />
        <result column="certification_time" property="certificationTime" jdbcType="INTEGER" />
        <result column="register_way" property="registerWay" jdbcType="CHAR" />
        <result column="system_code" property="systemCode" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
        <result column="use_status" property="useStatus" jdbcType="VARCHAR" />
        <result column="lender_num" property="lenderNum" jdbcType="VARCHAR" />
        <result column="iscompany" property="iscompany" jdbcType="CHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
    id, nick_name, mobile, email, login_pwd, trade_pwd, activate_code, activate_overtime, activate_state,
    referral_code, certification_time,register_way,system_code, create_time, operate_time, use_status,lender_num,iscompany
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_lender_login
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_lender_login
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yipuhui.fastgo.enty.LenderLogin" >
    insert into t_lender_login (id, nick_name, mobile, 
      email, login_pwd, trade_pwd, activate_code, 
      activate_overtime, activate_state, referral_code, 
      certification_time,register_way,system_code, create_time, operate_time
      )
    values (#{id,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{loginPwd,jdbcType=VARCHAR}, #{tradePwd,jdbcType=VARCHAR}, #{activateCode,jdbcType=VARCHAR}, 
      #{activateOvertime,jdbcType=INTEGER}, #{activateState,jdbcType=CHAR}, #{referralCode,jdbcType=VARCHAR}, 
      #{certificationTime,jdbcType=INTEGER}, #{registerWay,jdbcType=CHAR},#{systemCode,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP}, #{operateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yipuhui.fastgo.enty.LenderLogin">
  	<selectKey keyProperty="id" resultType="int" order="AFTER">
		select LAST_INSERT_ID()
	</selectKey>
	
    insert into t_lender_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="loginPwd != null" >
        login_pwd,
      </if>
      <if test="tradePwd != null" >
        trade_pwd,
      </if>
      <if test="activateCode != null" >
        activate_code,
      </if>
      <if test="activateOvertime != null" >
        activate_overtime,
      </if>
      <if test="activateState != null" >
        activate_state,
      </if>
      <if test="referralCode != null" >
        referral_code,
      </if>
      <if test="certificationTime != null" >
        certification_time,
      </if>
      <if test="registerWay != null" >
        register_way,
      </if>
      <if test="systemCode != null" >
        system_code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="tradePwd != null" >
        #{tradePwd,jdbcType=VARCHAR},
      </if>
      <if test="activateCode != null" >
        #{activateCode,jdbcType=VARCHAR},
      </if>
      <if test="activateOvertime != null" >
        #{activateOvertime,jdbcType=INTEGER},
      </if>
      <if test="activateState != null" >
        #{activateState,jdbcType=CHAR},
      </if>
      <if test="referralCode != null" >
        #{referralCode,jdbcType=VARCHAR},
      </if>
      <if test="certificationTime != null" >
        #{certificationTime,jdbcType=INTEGER},
      </if>
      <if test="registerWay != null" >
        #{registerWay,jdbcType=CHAR},
      </if>
      <if test="systemCode != null" >
        #{systemCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yipuhui.fastgo.enty.LenderLogin" >
    update t_lender_login
    <set >
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        login_pwd = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="tradePwd != null" >
       trade_pwd = #{tradePwd,jdbcType=VARCHAR},
      </if>
      <if test="activateCode != null" >
        activate_code = #{activateCode,jdbcType=VARCHAR},
      </if>
      <if test="activateOvertime != null" >
        activate_overtime = #{activateOvertime,jdbcType=INTEGER},
      </if>
      <if test="activateState != null" >
        activate_state = #{activateState,jdbcType=CHAR},
      </if>
      <if test="referralCode != null" >
        referral_code = #{referralCode,jdbcType=VARCHAR},
      </if>
      <if test="certificationTime != null" >
        certification_time = #{certificationTime,jdbcType=INTEGER},
      </if>
      <if test="registerWay != null" >
        register_way = #{registerWay,jdbcType=CHAR},
      </if>
      <if test="systemCode != null" >
        system_code = #{systemCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yipuhui.fastgo.enty.LenderLogin" >
    update t_lender_login
    set nick_name = #{nickName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      login_pwd = #{loginPwd,jdbcType=VARCHAR},
      trade_pwd = #{tradePwd,jdbcType=VARCHAR},
      activate_code = #{activateCode,jdbcType=VARCHAR},
      activate_overtime = #{activateOvertime,jdbcType=INTEGER},
      activate_state = #{activateState,jdbcType=CHAR},
      referral_code = #{referralCode,jdbcType=VARCHAR},
      certification_time = #{certificationTime,jdbcType=INTEGER},
      register_way = #{registerWay,jdbcType=CHAR},
      system_code = #{systemCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operate_time = #{operateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 验证用户登录 -->
	<select id="checkLenderLogin" parameterType="string" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		t_lender_login ll
		WHERE ll.mobile = #{account} OR ll.nick_name = #{account} OR (ll.email = #{account} AND ll.activate_state = '1')
	</select>
	
	<!-- 查询注册客户总数 -->
	<select id="findCustomerCount" resultType="Long">
		SELECT count(*) FROM `t_lender_login`;
	</select>
	
	<select id="selectPwdDefaultAccount" resultType="hashmap">
		SELECT
		 id,mobile
		FROM
		t_memo 
		WHERE login_pwd is null
	</select>
	
	<update id="initDefultPwd" parameterType="hashmap" >
    update t_memo
    <set >
      <if test="pwd != null" >
        pwd = #{pwd},
      </if>
      <if test="loginPwd != null" >
        login_pwd = #{loginPwd},
      </if>
    </set>
    where id = #{id}
  </update>
  
  <select id="findLenderLoginByNickName" resultType="long" parameterType="string">
  	select count(*) from t_lender_login where nick_name =#{nick_name} OR mobile=#{nick_name} 
  </select>
  <!-- 检测手机号是否存在 -->
  <select id="checkMobileIsExist" resultType="integer" parameterType="string">
  	select count(1) from t_lender_login where mobile =#{mobile}
  </select>
  
  <!-- 检测用户名是否存在(crm首次登录) -->
  <select id="chkNickNameByCrm" resultType="integer" parameterType="hashmap">
  	select count(1) from t_lender_login where nick_name =#{nickName} OR (mobile=#{nickName} and id != #{id,jdbcType=INTEGER})
  </select>
  
  <!-- 根据旧密码修改新密码 -->
  <update id="updateNewTelephoneByOldTel" parameterType="hashmap">
      update t_lender_login set mobile = #{newTel} where mobile=#{oldTel}
  </update>
  
  <!-- 根据用户名（昵称）判断用户是否存在 -->
  <select id="checkAccountIsExist" parameterType="string" resultType="int">
  	SELECT 
	  COUNT(1)
	FROM
	  t_lender_login ll 
	WHERE ll.mobile = #{account}
  </select>
  
  <!-- 判断用户名和手机号或邮箱是否匹配 -->
  <select id="checkMobOrEmaIsMatch" parameterType="hashmap" resultType="integer">
  	SELECT COUNT(1) FROM t_lender_login ll WHERE ll.mobile = #{mobile}
  </select>
  
  <!-- 通过邮箱查找用户信息 -->
	<select id="selectByEmail" parameterType="com.yipuhui.fastgo.enty.LenderLogin" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		t_lender_login tl
		WHERE tl.email = #{email}
		<if test="activateCode != null" >
        	AND tl.activate_code = #{activateCode}
      	</if>
      	<if test="activateState != null" >
        	AND tl.activate_state = #{activateState}
      	</if>
	</select>
	
	<!-- 通过邮箱查找是否与已绑定状态的邮箱一致 -->
	<select id="checkEmailIsExist" parameterType="com.yipuhui.fastgo.enty.LenderLogin" resultType="integer">
		SELECT
		count(1)
		FROM
		t_lender_login tl
		WHERE tl.activate_state = 1 AND tl.email = #{email}
	</select>
  
  <!-- 通过Email更新用户 -->
  <update id="updateByEmail" parameterType="com.yipuhui.fastgo.enty.LenderLogin">
    update t_lender_login set activate_state = #{activateState}
    where email = #{email}
    <if test="activateCode != null" >
        	AND activate_code = #{activateCode}
    </if>
  </update>
  
  <!-- 修改登录密码 -->
  <update id="updateLoginPwd" parameterType="hashmap">
  	UPDATE 
	  t_lender_login ll 
	SET
	  ll.login_pwd = #{newPwd} 
	WHERE ll.mobile = #{account}
  </update>
    
  <select id="findLenderLoginByMobile" resultType="INTEGER" parameterType="string">
  	select count(*) from t_lender_login where mobile =#{oldTel}
  </select>
  
  <!-- 通过id查询手机信息 -->
  <select id="findMobById" parameterType="Integer" resultType="hashmap">
  	SELECT 
	  tl.`nick_name` AS nickName,
	  tl.`trade_pwd` AS tradePwd,
	  tl.`mobile` AS mobile,
	  tl.`email` AS email,
	  tl.`activate_state` AS activateState 
	FROM
	  t_lender_login tl 
	WHERE tl.`id` = #{id}
  </select>
  
  <!-- * 查询交易密码 * from lijie -->
  <select id="selectTradePwdById" parameterType="integer" resultType="string">
  	SELECT 
	  ll.trade_pwd 
	FROM
	  t_lender_login ll 
	WHERE ll.id = #{id}
  </select>
  
  <!-- * 根据手机号删除  * from lijie -->
  <delete id="deleteByMobile" parameterType="string">
  	DELETE 
	FROM
	  t_lender_login 
	WHERE mobile = #{mobile}
  </delete>
  
  <!-- 注册用户查询条件 -->
  <sql id="dynamicPageWhere">
  	<if test="nickName != null">
  		and tl.nick_name like '${nickName}%'
 	</if>
 	<if test="mobile != null">
  		and tl.mobile = #{mobile}
 	</if>
 	<if test="referralCode != null">
  		and tl.referral_code = #{referralCode}
 	</if>
 	<if test="registerWay != null">
  		and tl.register_way = #{registerWay}
 	</if>
 	<if test="systemCode != null">
  		and tl.system_code = #{systemCode}
 	</if>
 	<if test="minCreateTime != null">
 		and DATE_FORMAT(tl.create_time,'%Y-%m-%d') >= #{minCreateTime}
 	</if>
 	<if test="maxCreateTime != null">
 	<![CDATA[
 		and DATE_FORMAT(tl.create_time,'%Y-%m-%d') <= #{maxCreateTime}
 	]]>	
 	</if>
  </sql>
  
  <!-- 查询注册用户信息 -->
  <select id="findAllRetMapByPage" resultType="hashmap" parameterType="hashmap">
  	SELECT 
  	  tl.id,
	  tl.nick_name,
	  tl.mobile,
	  tl.referral_code,
	  tl.certification_time,
	  CASE
	    WHEN (
	      use_status = '0' 
	      OR use_status IS NULL
	    ) 
	    THEN '可用' 
	    WHEN use_status = '1' 
	    THEN '不可用' 
	  END use_status,
	  tl.register_way,
	  (select sd.dict_name from system_dict sd where sd.dict_type = 'REGISTER_WAY' and sd.dict_code = tl.register_way) register_way_name,
	  tl.system_code,
	  tl.create_time
	FROM t_lender_login tl
	WHERE 1=1 
  	<include refid="dynamicPageWhere" />
  	ORDER BY tl.create_time DESC
  	LIMIT #{startIndex},#{pageSize}  
  </select>
  <!-- 注册用户记录数 -->
  <select id="findAllByPageCount" resultType="long">
  	SELECT COUNT(1) FROM t_lender_login tl
  	WHERE 1=1 
  	<include refid="dynamicPageWhere" />
  	ORDER BY tl.id DESC
  </select>
  <!-- 查询用户手机号通过系统编码 -->
  <select id="getMobileBySystemCode" resultType="string" parameterType="hashmap">
  	SELECT 
	  tl.mobile 
	FROM
	  t_lender_login tl 
	WHERE 1=1
	<include refid="getMobileDynamicPageWhere" />
	ORDER BY tl.id DESC
  </select>
  <sql id="getMobileDynamicPageWhere">
  	<if test="systemCode != null">
  		and tl.system_code = #{systemCode}
 	</if>
  </sql>
  
  <!-- 认购查询：查询系统编码 -->
  <select id="getOrderLenderLogin" parameterType="string" resultType="string">
  	SELECT 
	  tl.system_code systemCode 
	FROM
	  t_lender_login tl 
	WHERE tl.mobile = #{mobile} 
  </select>
  
  <update id="doJoinBlacklist" parameterType="integer">
  	UPDATE 
	  t_lender_login ll 
	SET
	  ll.use_status = 1 
	WHERE ll.id = #{id}
  </update>
  
  <!-- 获取用户的昵称和密码（积分商城用） -->
  <select id="selectPwd" parameterType="integer" resultType="hashmap">
  	SELECT 
	  tl.mobile username,
	  tl.login_pwd password 
	FROM
	  t_lender_login tl 
	WHERE tl.id = #{lenderLoginId}
  </select>
    <select id="fundObjectByUserNum" resultMap="BaseResultMap">

        SELECT
        <include refid="Base_Column_List" />
        FROM
        t_lender_login
        WHERE lender_num = #{lenderNum,jdbcType=VARCHAR}

    </select>
</mapper>