<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.yipuhui.fastgo.dao.UeWaterMapper" >
  <resultMap id="BaseResultMap" type="com.yipuhui.fastgo.enty.UeWater" >
    <id column="ue_water_id" property="ueWaterId" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="lender_login_id" property="lenderLoginId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="water_desc" property="waterDesc" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ue_water_id, money, lender_login_id, `type`, create_time, water_desc
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yipuhui.fastgo.enty.UeWaterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ue_water
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.yipuhui.fastgo.enty.UeWaterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ue_water
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yipuhui.fastgo.enty.UeWaterExample" >
    delete from ue_water
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.yipuhui.fastgo.enty.UeWaterExample" resultType="java.lang.Integer" >
    select count(*) from ue_water
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ue_water
    <set >
      <if test="record.ueWaterId != null" >
        ue_water_id = #{record.ueWaterId,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.lenderLoginId != null" >
        lender_login_id = #{record.lenderLoginId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.waterDesc != null" >
        water_desc = #{record.waterDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ue_water
    set ue_water_id = #{record.ueWaterId,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      lender_login_id = #{record.lenderLoginId,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      water_desc = #{record.waterDesc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ue_water
    where ue_water_id = #{ueWaterId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ue_water
    where ue_water_id = #{ueWaterId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yipuhui.fastgo.enty.UeWater" useGeneratedKeys="true" keyProperty="ueWaterId" >
    insert into ue_water (money, lender_login_id, `type`, 
      create_time, water_desc)
    values (#{money,jdbcType=DECIMAL}, #{lenderLoginId,jdbcType=INTEGER}, #{type,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{waterDesc,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yipuhui.fastgo.enty.UeWater" useGeneratedKeys="true" keyProperty="ueWaterId" >
    insert into ue_water
    <trim prefix="(" suffix=")" suffixOverrides="," >
      money,
      lender_login_id,
      `type`,
      create_time,
      water_desc,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{money,jdbcType=DECIMAL},
      #{lenderLoginId,jdbcType=INTEGER},
      #{type,jdbcType=CHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{waterDesc,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yipuhui.fastgo.enty.UeWater" >
    update ue_water
    <set >
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="lenderLoginId != null" >
        lender_login_id = #{lenderLoginId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="waterDesc != null" >
        water_desc = #{waterDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where ue_water_id = #{ueWaterId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yipuhui.fastgo.enty.UeWater" >
    update ue_water
    set money = #{money,jdbcType=DECIMAL},
      lender_login_id = #{lenderLoginId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      water_desc = #{waterDesc,jdbcType=VARCHAR}
    where ue_water_id = #{ueWaterId,jdbcType=INTEGER}
  </update>
</mapper>